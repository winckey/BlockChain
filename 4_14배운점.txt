자바 변수는 그냥 규칙을 따르자 문제 생김컨벤션때매


솔리디티(Solidity) 프로그래밍 언어
이번 글 주제인 솔리디티(Solidity)는 스마트 계약 작성을 위한 프로그래밍 언어입니다. 이 언어는 Javascript 문법과 유사합니다. 새로 배우는 언어, 프레임워크 등을 시도 해보려면 개발 환경 구축 단계가 필요할 것 입니다. 이 단계는 필수적이지만 빠르게 솔리디티 언어를 체험하시고 싶은 분은 Remix 사이트에 가시면 됩니다. Remix는 온라인 환경에서 솔리디티 언어를 컴파일하고 실행할 수 있는 사이트입니다.
Remix 사이트에 접속 합니다. 코드를 아래와 같이 변경해줍니다.
pragma solidity ^0.4.22;

contract Greeter {
    
    string greeting;

    constructor(string _greeting) public {
        greeting = _greeting;
    }

    function greet() constant public returns (string) {
        return greeting;
    }
}
코드를 간단하게 하나씩 살펴보겠습니다.
pragma solidity ^0.4.0
컴파일 0.4.0 버전을 명시하며, 해당 버전보다 작거나 크면 안된다는(^) 것입니다. 파일 맨 위에 항상 선언되어 있어야 합니다.
contract Greeter {}
Greeter 컨트랙트를 만들겠다는 것을 뜻하며, 하나의 파일에 여러 개의 컨트랙트가 존재할 수 있습니다.
string greeting
컨트랙트의 상태를 저장하는 변수입니다. 앞에는 string 데이터 타입이고, greeting는 변수명입니다. 
constructor(string _greeting) public { }
함수는 function 키워드를 사용해서 선언합니다. 이 함수는 Greeter 컨트랙트 이름과 동일합니다. 자바의 생성자처럼 Greeter 컨트랙트의 생성함수로서 생성되는 순간 자동으로 호출되어 실행됩니다. string 타입의 _greeting 매개변수를 받아서 greeting 변수에 값을 저장하고 있습니다. public은 접근 키워드로서 외부에서도 호출이 될 수 있도록 지정한 것 입니다.
해당 코드를 Remix에 입력하고 컴파일 및 실행하면, Greeter 컨트랙트를 생성하면서 greeting 변수에 값을 넣게 됩니다. 그리고 debug를 이용하면 어떤 값이 들어갔는지 확인이 가능합니다. 서두 없이 작성한 감이 있어서 이 글을 보고 나서 이게 스마트 컨트랙트인가라고 생각이 들 것 같습니다. 저도 아직은 배워가고 있고 내용이 이해가 되고 정의가 되면 좀 더 자세히 글을 작성하도록 하겠습니다. 예제 코드에서는 간단하게 string 데이터를 저장하는 상태를 가지고 있는 스마트 컨트랙트를 생성했습니다. 여기에 msg 글로벌 변수를 사용하면 블록체인의 다양한 정보를 알 수 있습니다. 그리고 kill 함수는 다른 사람에게 금액을 전송하고 해당 컨트랙트를 종료시키는 역할을 수행할 수 있습니다. 아래에 솔리디티 가이드 문서와 튜토리얼 URL이 있습니다. 해당 자료를 참고하시면 솔리디티, 이더리움이 무엇인지 도움을 받을 수 있을 것 입니다.