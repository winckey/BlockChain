{
  "contractName": "KryptoBird",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kBirdz",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_kryptoBird",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"kBirdz\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kryptoBird\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_owner\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT// \\uc774\\uac83\\ub4e4\\uba38\\uc784??\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries  about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Find the owner of an NFT\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/KryptoBirdz.sol\":\"KryptoBird\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721.sol\":{\"keccak256\":\"0x7f0c861bd3507f2c0796e9d56e91ee3101a4a3d17b8047af4a6c73d110aa22f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f12e61cdb532501cbc5d3c7069dad92cb02cf87477211d8ab0af7eca55b66829\",\"dweb:/ipfs/QmVoJzc7b2579bKreq67dNHWFmdD53wLH4XL9pDSg8oQdT\"]},\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721Connector.sol\":{\"keccak256\":\"0x1d95d618be22b9b40abf16adef3f3774b24cf6d001cbb9e4c5b2d8b648c76010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0429f216578107732dfff16efd5828ba56d8e9f29301cc75bd073b9a9b463ec\",\"dweb:/ipfs/QmVg8YGPqEdNwfjBpN6c1JVu1si1dY5xuv5GiLJHtaMyWm\"]},\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721Enumerable.sol\":{\"keccak256\":\"0xb331d812cd8ac20c2b71e89d2a612ed8191e91691e107fb1588321e222f33dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc5cc4dd5eb10ac348be6e70bcca3e0b2a54b43f6b4752edea96663797a74fbb\",\"dweb:/ipfs/QmarW8Em1s7Tg4np7Nh3oCXuriyQuSpFGwcmhRBpTjBFEW\"]},\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721Metadata.sol\":{\"keccak256\":\"0xcafd8d3aa53f6744f0c861d1fb754cfff0ca7de7b7b7558ec96254f6b404f022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979bc30453a6110cfefa4944e7fde67899a933d4fef52656807ec03a96aa7e18\",\"dweb:/ipfs/QmWqkK5eJWvWnejbX7nbSLQLcBADwVzE6ouNZP2cwDxvV3\"]},\"/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/KryptoBirdz.sol\":{\"keccak256\":\"0xa3afa888b71fc34daef8cb2523440fd468826940763011d85a3d733319258367\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86747bb9ac3fda15242f1aed68c0b4b354c673abb48dc2787d2dc751784be7d4\",\"dweb:/ipfs/Qmb8JpYYKJeT6ThbRSPGm1Kam6XmeDRPAPMVjXpJdPSy2A\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600681526020017f6b6e616d653200000000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f6b73796d626f6c32000000000000000000000000000000000000000000000000815250818181600090805190602001906100959291906100b6565b5080600190805190602001906100ac9291906100b6565b5050505050610153565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100f757805160ff1916838001178555610125565b82800160010185558215610125579182015b82811115610124578251825591602001919060010190610109565b5b5090506101329190610136565b5090565b5b8082111561014f576000816000905550600101610137565b5090565b61100b80620001636000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636352211e116100665780636352211e146101dd5780636fbc990e1461023557806370a08231146102dc57806395d89b4114610334578063d85d3d27146103b757610093565b806306fdde031461009857806318160ddd1461011b5780632f745c59146101395780634f6ccce71461019b575b600080fd5b6100a0610472565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610123610514565b6040518082815260200191505060405180910390f35b6101856004803603604081101561014f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610521565b6040518082815260200191505060405180910390f35b6101c7600480360360208110156101b157600080fd5b81019080803590602001909291905050506105fd565b6040518082815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b810190808035906020019092919050505061069a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610762565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a1578082015181840152602081019050610286565b50505050905090810190601f1680156102ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61031e600480360360208110156102f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061081b565b6040518082815260200191505060405180910390f35b61033c6108e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037c578082015181840152602081019050610361565b50505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610470600480360360208110156103cd57600080fd5b81019080803590602001906401000000008111156103ea57600080fd5b8201836020820111156103fc57600080fd5b8035906020019184600183028401116401000000008311171561041e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061098b565b005b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050a5780601f106104df5761010080835404028352916020019161050a565b820191906000526020600020905b8154815290600101906020018083116104ed57829003601f168201915b5050505050905090565b6000600580549050905090565b600061052c8361081b565b82106105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f776e657220696e646578206973206f7574206f6620626f756e64732100000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105ea57fe5b9060005260206000200154905092915050565b6000610607610514565b821061067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f676c6f62616c20696e646578206973206f7574206f6620626f756e647321000081525060200191505060405180910390fd5b6005828154811061068857fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610759576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f716022913960400191505060405180910390fd5b80915050919050565b6009818154811061076f57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108135780601f106107e857610100808354040283529160200191610813565b820191906000526020600020905b8154815290600101906020018083116107f657829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f716022913960400191505060405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109815780601f1061095657610100808354040283529160200191610981565b820191906000526020600020905b81548152906001019060200180831161096457829003601f168201915b5050505050905090565b600a816040518082805190602001908083835b602083106109c1578051825260208201915060208101905060208303925061099e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1615610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610f936021913960400191505060405180910390fd5b600981908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610a93929190610ed3565b5060006001600980549050039050610aab3382610b31565b6001600a836040518082805190602001908083835b60208310610ae35780518252602082019150602081019050602083039250610ac0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b610b3b8282610b52565b610b4481610d54565b610b4e8282610d9d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fb46022913960400191505060405180910390fd5b610be181610e61565b15610c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fbeabacc8ffedac16e9a60acdb2ca743d80c2ebb44977a93fa8e483c74d2b35a860405160405180910390a45050565b6005805490506006600083815260200190815260200160002081905550600581908060018154018082558091505060019003906000526020600020016000909190919091505550565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f1457805160ff1916838001178555610f42565b82800160010185558215610f42579182015b82811115610f41578251825591602001919060010190610f26565b5b509050610f4f9190610f53565b5090565b5b80821115610f6c576000816000905550600101610f54565b509056fe6f776e657220717565727920666f72206e6f6e2d6578697374656e7420746f6b656e4572726f72202d206b727970746f4269726420616c7265616479206578697374734552433732313a206d696e74696e6720746f20746865207a65726f20616464726573a26469706673582212207ce1abd2f9f13318ebca43afd65aa15d7cb96018bd6c28f5da513f6b3ae4b47e64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80636352211e116100665780636352211e146101dd5780636fbc990e1461023557806370a08231146102dc57806395d89b4114610334578063d85d3d27146103b757610093565b806306fdde031461009857806318160ddd1461011b5780632f745c59146101395780634f6ccce71461019b575b600080fd5b6100a0610472565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610123610514565b6040518082815260200191505060405180910390f35b6101856004803603604081101561014f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610521565b6040518082815260200191505060405180910390f35b6101c7600480360360208110156101b157600080fd5b81019080803590602001909291905050506105fd565b6040518082815260200191505060405180910390f35b610209600480360360208110156101f357600080fd5b810190808035906020019092919050505061069a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102616004803603602081101561024b57600080fd5b8101908080359060200190929190505050610762565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a1578082015181840152602081019050610286565b50505050905090810190601f1680156102ce5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61031e600480360360208110156102f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061081b565b6040518082815260200191505060405180910390f35b61033c6108e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037c578082015181840152602081019050610361565b50505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610470600480360360208110156103cd57600080fd5b81019080803590602001906401000000008111156103ea57600080fd5b8201836020820111156103fc57600080fd5b8035906020019184600183028401116401000000008311171561041e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061098b565b005b606060008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561050a5780601f106104df5761010080835404028352916020019161050a565b820191906000526020600020905b8154815290600101906020018083116104ed57829003601f168201915b5050505050905090565b6000600580549050905090565b600061052c8361081b565b82106105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6f776e657220696e646578206973206f7574206f6620626f756e64732100000081525060200191505060405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105ea57fe5b9060005260206000200154905092915050565b6000610607610514565b821061067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f676c6f62616c20696e646578206973206f7574206f6620626f756e647321000081525060200191505060405180910390fd5b6005828154811061068857fe5b90600052602060002001549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610759576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f716022913960400191505060405180910390fd5b80915050919050565b6009818154811061076f57fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108135780601f106107e857610100808354040283529160200191610813565b820191906000526020600020905b8154815290600101906020018083116107f657829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610f716022913960400191505060405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109815780601f1061095657610100808354040283529160200191610981565b820191906000526020600020905b81548152906001019060200180831161096457829003601f168201915b5050505050905090565b600a816040518082805190602001908083835b602083106109c1578051825260208201915060208101905060208303925061099e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1615610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610f936021913960400191505060405180910390fd5b600981908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610a93929190610ed3565b5060006001600980549050039050610aab3382610b31565b6001600a836040518082805190602001908083835b60208310610ae35780518252602082019150602081019050602083039250610ac0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff0219169083151502179055505050565b610b3b8282610b52565b610b4481610d54565b610b4e8282610d9d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fb46022913960400191505060405180910390fd5b610be181610e61565b15610c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fbeabacc8ffedac16e9a60acdb2ca743d80c2ebb44977a93fa8e483c74d2b35a860405160405180910390a45050565b6005805490506006600083815260200190815260200160002081905550600581908060018154018082558091505060019003906000526020600020016000909190919091505550565b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506008600083815260200190815260200160002081905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f1457805160ff1916838001178555610f42565b82800160010185558215610f42579182015b82811115610f41578251825591602001919060010190610f26565b5b509050610f4f9190610f53565b5090565b5b80821115610f6c576000816000905550600101610f54565b509056fe6f776e657220717565727920666f72206e6f6e2d6578697374656e7420746f6b656e4572726f72202d206b727970746f4269726420616c7265616479206578697374734552433732313a206d696e74696e6720746f20746865207a65726f20616464726573a26469706673582212207ce1abd2f9f13318ebca43afd65aa15d7cb96018bd6c28f5da513f6b3ae4b47e64736f6c634300060c0033",
  "sourceMap": "100:816:4:-:0;;;839:68;;;;;;;;;;286:109:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:4;371:6;362:5:3;354;:13;;;;;;;;;;;;:::i;:::-;;387:11;377:7;:21;;;;;;;;;;;;:::i;:::-;;206:208;;286:109:1;;100:816:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "100:816:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:209:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3110:93:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2614:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2249:359;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2668:219:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;146:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;635:82:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;240:592:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;420:209:3;458:13;617:5;610:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:209;:::o;3110:93:2:-;3153:7;3179:10;:17;;;;3172:24;;3110:93;:::o;2614:435::-;2690:7;2852:16;2862:5;2852:9;:16::i;:::-;2844:5;:24;2836:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2927:12;:19;2940:5;2927:19;;;;;;;;;;;;;;;2947:5;2927:26;;;;;;;;;;;;;;;;2920:33;;2614:435;;;;:::o;2249:359::-;2306:7;2467:13;:11;:13::i;:::-;2459:5;:21;2451:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:10;2595:5;2584:17;;;;;;;;;;;;;;;;2577:24;;2249:359;;;:::o;2668:219:0:-;2726:7;2745:13;2761:11;:21;2773:8;2761:21;;;;;;;;;;;;;;;;;;;;;2745:37;;2817:1;2800:19;;:5;:19;;;;2792:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:5;2868:12;;;2668:219;;;:::o;146:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2206:203:0:-;2262:7;2311:1;2293:20;;:6;:20;;;;2285:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2373:17;:25;2391:6;2373:25;;;;;;;;;;;;;;;;2366:32;;2206:203;;;:::o;635:82:3:-;675:13;703:7;696:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:82;:::o;240:592:4:-;308:18;327:11;308:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:32;299:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:6;481:11;469:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;503:8;530:1;514:6;:13;;;;:17;503:28;;619:22;625:10;637:3;619:5;:22::i;:::-;820:4;786:18;805:11;786:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;240:592;;:::o;582:535:2:-;690:24;702:2;706:7;690:11;:24::i;:::-;1018:40;1050:7;1018:31;:40::i;:::-;1069:41;1098:2;1102:7;1069:28;:41::i;:::-;582:535;;:::o;3606:1366:0:-;3941:1;3927:16;;:2;:16;;;;3919:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4115:16;4123:7;4115;:16::i;:::-;4114:17;4106:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:2;4294:11;:20;4306:7;4294:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;4665:1;4641:17;:21;4659:2;4641:21;;;;;;;;;;;;;;;;:25;;;;;;;;;;;4914:7;4909:2;4889:33;;4906:1;4889:33;;;;;;;;;;;;3606:1366;;:::o;1208:294:2:-;1362:10;:17;;;;1335:15;:24;1351:7;1335:24;;;;;;;;;;;:44;;;;1433:10;1449:7;1433:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:294;:::o;1509:624::-;1939:12;:16;1952:2;1939:16;;;;;;;;;;;;;;;:23;;;;1910:17;:26;1928:7;1910:26;;;;;;;;;;;:52;;;;2015:12;:16;2028:2;2015:16;;;;;;;;;;;;;;;2037:7;2015:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:624;;:::o;2894:438:0:-;2950:4;3089:13;3105:11;:20;3117:7;3105:20;;;;;;;;;;;;;;;;;;;;;3089:36;;3323:1;3306:19;;:5;:19;;;;3299:26;;;2894:438;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport './ERC721Connector.sol';\n\n\ncontract KryptoBird is ERC721Connector{\n\n\n    string [] public kBirdz;\n    //nft array\n    mapping(string => bool) _kryptoBirdzExists;\n\n    function mint(string memory _kryptoBird) public {\n\n        require(!_kryptoBirdzExists[_kryptoBird],\n        'Error - kryptoBird already exists');\n        // this is deprecated - uint _id = KryptoBirdz.push(_kryptoBird);\n        kBirdz.push(_kryptoBird);\n        uint _id = kBirdz.length - 1;\n\n        // .push no longer returns the length but a ref to the added element\n        _mint(msg.sender, _id);\n        //msg.sender 는 이걸 쓰는 사람의 주소\n        // 여기서 잡는데 구지 다시하는이유가 머임???\n        \n        _kryptoBirdzExists[_kryptoBird] = true;\n\n    }\n\n\n    constructor()  ERC721Connector('kname2', 'ksymbol2') public {\n\n    }\n\n\n    \n}\n\n\n",
  "sourcePath": "C:/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/KryptoBirdz.sol",
  "ast": {
    "absolutePath": "/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/KryptoBirdz.sol",
    "exportedSymbols": {
      "KryptoBird": [
        413
      ]
    },
    "id": 414,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 355,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:4"
      },
      {
        "absolutePath": "/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721Connector.sol",
        "file": "./ERC721Connector.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 166,
        "src": "66:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 357,
              "name": "ERC721Connector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 165,
              "src": "123:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Connector_$165",
                "typeString": "contract ERC721Connector"
              }
            },
            "id": 358,
            "nodeType": "InheritanceSpecifier",
            "src": "123:15:4"
          }
        ],
        "contractDependencies": [
          144,
          165,
          314,
          353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 413,
        "linearizedBaseContracts": [
          413,
          165,
          314,
          144,
          353
        ],
        "name": "KryptoBird",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6fbc990e",
            "id": 361,
            "mutability": "mutable",
            "name": "kBirdz",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 413,
            "src": "146:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 359,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "146:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 360,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "146:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 365,
            "mutability": "mutable",
            "name": "_kryptoBirdzExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 413,
            "src": "191:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 364,
              "keyType": {
                "id": 362,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "199:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "191:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 363,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "209:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "288:544:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "307:32:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 371,
                            "name": "_kryptoBirdzExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "308:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 373,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "_kryptoBird",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "327:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "308:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72202d206b727970746f4269726420616c726561647920657869737473",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "349:35:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49ef0fcaeba29a4e4693e1ea46f2bf2a6b649951df0313f1f4d2689fb825e564",
                          "typeString": "literal_string \"Error - kryptoBird already exists\""
                        },
                        "value": "Error - kryptoBird already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49ef0fcaeba29a4e4693e1ea46f2bf2a6b649951df0313f1f4d2689fb825e564",
                          "typeString": "literal_string \"Error - kryptoBird already exists\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "299:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:86:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "299:86:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "_kryptoBird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "481:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "kBirdz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "469:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "469:24:4"
                },
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 403,
                      "src": "503:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "503:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "kBirdz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "514:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "514:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "530:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "514:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "503:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "625:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "625:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "637:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 391,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        216
                      ],
                      "referencedDeclaration": 216,
                      "src": "619:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "619:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "_kryptoBirdzExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "786:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 399,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "_kryptoBird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "805:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "786:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "820:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "786:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "786:38:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "_kryptoBird",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "254:25:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "253:27:4"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:4"
            },
            "scope": 413,
            "src": "240:592:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "899:8:4",
              "statements": []
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "6b6e616d6532",
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "870:8:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_727daa70881a4b3a9a03810a49754e59ca8c6c5cf86a04c16b1a2deb1de2e8c8",
                      "typeString": "literal_string \"kname2\""
                    },
                    "value": "kname2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6b73796d626f6c32",
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "880:10:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9815291a368801587d5bc44f56539c0e3835d0ced566372eacb9bcada74d3497",
                      "typeString": "literal_string \"ksymbol2\""
                    },
                    "value": "ksymbol2"
                  }
                ],
                "id": 409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 406,
                  "name": "ERC721Connector",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 165,
                  "src": "854:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Connector_$165_$",
                    "typeString": "type(contract ERC721Connector)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "854:37:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:4"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:4"
            },
            "scope": 413,
            "src": "839:68:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 414,
        "src": "100:816:4"
      }
    ],
    "src": "32:887:4"
  },
  "legacyAST": {
    "absolutePath": "/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/KryptoBirdz.sol",
    "exportedSymbols": {
      "KryptoBird": [
        413
      ]
    },
    "id": 414,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 355,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:4"
      },
      {
        "absolutePath": "/C/SSAFY/BlockChain/nft-marketplace-starter-kit-main/src/contracts/ERC721Connector.sol",
        "file": "./ERC721Connector.sol",
        "id": 356,
        "nodeType": "ImportDirective",
        "scope": 414,
        "sourceUnit": 166,
        "src": "66:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 357,
              "name": "ERC721Connector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 165,
              "src": "123:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Connector_$165",
                "typeString": "contract ERC721Connector"
              }
            },
            "id": 358,
            "nodeType": "InheritanceSpecifier",
            "src": "123:15:4"
          }
        ],
        "contractDependencies": [
          144,
          165,
          314,
          353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 413,
        "linearizedBaseContracts": [
          413,
          165,
          314,
          144,
          353
        ],
        "name": "KryptoBird",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6fbc990e",
            "id": 361,
            "mutability": "mutable",
            "name": "kBirdz",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 413,
            "src": "146:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 359,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "146:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 360,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "146:9:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 365,
            "mutability": "mutable",
            "name": "_kryptoBirdzExists",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 413,
            "src": "191:42:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 364,
              "keyType": {
                "id": 362,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "199:6:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "191:23:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 363,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "209:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "288:544:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "307:32:4",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 371,
                            "name": "_kryptoBirdzExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "308:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 373,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 372,
                            "name": "_kryptoBird",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 367,
                            "src": "327:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "308:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72202d206b727970746f4269726420616c726561647920657869737473",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "349:35:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49ef0fcaeba29a4e4693e1ea46f2bf2a6b649951df0313f1f4d2689fb825e564",
                          "typeString": "literal_string \"Error - kryptoBird already exists\""
                        },
                        "value": "Error - kryptoBird already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49ef0fcaeba29a4e4693e1ea46f2bf2a6b649951df0313f1f4d2689fb825e564",
                          "typeString": "literal_string \"Error - kryptoBird already exists\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "299:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:86:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "299:86:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "_kryptoBird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "481:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "kBirdz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "469:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "469:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$__$",
                        "typeString": "function (string storage ref)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "469:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "469:24:4"
                },
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 403,
                      "src": "503:8:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "503:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 386,
                        "name": "kBirdz",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 361,
                        "src": "514:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "514:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "530:1:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "514:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "503:28:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "625:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "625:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "637:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 391,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        216
                      ],
                      "referencedDeclaration": 216,
                      "src": "619:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "619:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "_kryptoBirdzExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 365,
                        "src": "786:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 399,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "_kryptoBird",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "805:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "786:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "820:4:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "786:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "786:38:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d85d3d27",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "_kryptoBird",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 404,
                  "src": "254:25:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "253:27:4"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:4"
            },
            "scope": 413,
            "src": "240:592:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "899:8:4",
              "statements": []
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "6b6e616d6532",
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "870:8:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_727daa70881a4b3a9a03810a49754e59ca8c6c5cf86a04c16b1a2deb1de2e8c8",
                      "typeString": "literal_string \"kname2\""
                    },
                    "value": "kname2"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "6b73796d626f6c32",
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "880:10:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9815291a368801587d5bc44f56539c0e3835d0ced566372eacb9bcada74d3497",
                      "typeString": "literal_string \"ksymbol2\""
                    },
                    "value": "ksymbol2"
                  }
                ],
                "id": 409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 406,
                  "name": "ERC721Connector",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 165,
                  "src": "854:15:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Connector_$165_$",
                    "typeString": "type(contract ERC721Connector)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "854:37:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:4"
            },
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "899:0:4"
            },
            "scope": 413,
            "src": "839:68:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 414,
        "src": "100:816:4"
      }
    ],
    "src": "32:887:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xbeabacc8ffedac16e9a60acdb2ca743d80c2ebb44977a93fa8e483c74d2b35a8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "type": "event",
          "signature": "0xbeabacc8ffedac16e9a60acdb2ca743d80c2ebb44977a93fa8e483c74d2b35a8"
        }
      },
      "links": {},
      "address": "0x8fFfE4f535C51524BC4F057299821B589cf4d2ad",
      "transactionHash": "0x4de2c853d3a72a1f38c15ed8a7208e48b3908e94cfa428439d1f1dd66d70fa82"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2022-03-14T23:57:13.514Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "params": {
          "_owner": "The identifier for an NFT"
        },
        "returns": {
          "_0": "The address of the owner of the NFT// 이것들머임??"
        }
      },
      "ownerOf(uint256)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT"
        },
        "returns": {
          "_0": "The address of the owner of the NFT"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Find the owner of an NFT"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an NFT"
      }
    },
    "version": 1
  }
}